-- Sticks question
create table sticks
(
stick1 int,
stick2 int,
stick3 int
)

insert into sticks values(3,3,4)
insert into sticks values(3,4,5)
insert into sticks values(3,3,3)
insert into sticks values(3,4,8)


select stick1, stick2, stick3, case 
								when stick1=stick2 and stick2=stick3 then 'Equilateral'
								when ((stick1+stick2) < stick3) or ((stick1+stick3)<stick2) or ((stick2+stick3)<stick1) then 'None'
								when (stick1=stick2 or stick1=stick3 or stick2=stick3) then 'Isosceles'
								when (stick1<>stick2 and stick2<>stick3) then 'Scalene'
							   end as situations
from sticks;


-- Grades question

create table grades
(
ID INT,
MIN_GRADE INT,
MAX_GRADE INT
) 

INSERT INTO GRADES VALUES (101, 10, 19)
INSERT INTO GRADES VALUES (102, 25, 35)
INSERT INTO GRADES VALUES (103, 50, 55)
INSERT INTO GRADES VALUES (104, 60, 76)
INSERT INTO GRADES VALUES (102, 80, 90)

SELECT * FROM grades

SELECT CONCAT('Student ',ID,' has grade : ',CASE 
						WHEN MAX_GRADE < 20 THEN 'F'
						WHEN (MAX_GRADE >= 20 AND MAX_GRADE < 40) THEN 'D'
						WHEN (MAX_GRADE >= 40 AND MAX_GRADE < 60) THEN 'C'
						WHEN (MAX_GRADE >= 60 AND MAX_GRADE < 80) THEN 'B'
						WHEN MAX_GRADE >= 80 THEN 'A'
						END) AS LETTER_GRADE
FROM GRADES 


--UPDATE GRADES
--SET ID = 105 WHERE MAX_GRADE = 90

-- STUDENTS AND DEPT

CREATE TABLE STUDENTS
(
STD_ID INT,
STD_NAME VARCHAR(10),
GENDER CHAR(1),
DEPT_ID INT
)

INSERT INTO STUDENTS VALUES (101, 'RAM', 'M', 2)
INSERT INTO STUDENTS VALUES (102, 'RAMYA', 'F', 3)
INSERT INTO STUDENTS VALUES (103, 'RAMU', 'M', 2)
INSERT INTO STUDENTS VALUES (104, 'RAJ', 'M', 4)
INSERT INTO STUDENTS VALUES (105, 'VIDYA', 'F', 1)
INSERT INTO STUDENTS VALUES (106, 'PRACHI', 'F', 4)
INSERT INTO STUDENTS VALUES (107, 'ADITI', 'F', 4)

SELECT * FROM STUDENTS

CREATE TABLE DEPTS
(
DEPT_ID INT,
DEPT_NAME VARCHAR (20)
)

INSERT INTO DEPTS VALUES(1, 'MGMNT')
INSERT INTO DEPTS VALUES(2, 'RSRCES')
INSERT INTO DEPTS VALUES(3, 'PROD')
INSERT INTO DEPTS VALUES(4, 'TECH')
INSERT INTO DEPTS VALUES(5, 'DEV')

SELECT * FROM DEPTS

SELECT D.DEPT_NAME, COUNT(S.STD_NAME) AS TOTAL_STDS 
FROM STUDENTS AS S LEFT JOIN DEPTS AS D
ON S.DEPT_ID = D.DEPT_ID
GROUP  BY D.DEPT_NAME


-- INSURANCE

CREATE TABLE INSURANCE
(
PID INT,
TIV_2011 DECIMAL(15,2),
TIV_2012 DECIMAL(15,2),
LAT DECIMAL(15,6),
LON DECIMAL(15,6)
)

INSERT INTO INSURANCE VALUES (1001, 1449866.88, 1338076.34, 30.285202, 82.105835)
INSERT INTO INSURANCE VALUES (1002, 1849.32, 1987.47, 31.285202, 82.105835)
INSERT INTO INSURANCE VALUES (1003, 1812.32, 295022.71, 31.285202, 82.105835)
INSERT INTO INSURANCE VALUES (1004, 1449866.88, 369024.45, 31.285257, 82.139542)
INSERT INTO INSURANCE VALUES (1005, 1849.32, 4657.86, 32.285257, 82.139542)

SELECT * FROM INSURANCE

SELECT SUM(TIV_2012) FROM 
(
SELECT TIV_2011 FROM INSURANCE
GROUP BY TIV_2011
HAVING COUNT(TIV_2011)>1
) A 
INNER JOIN INSURANCE B
ON A.TIV_2011 = B.TIV_2011
AND LAT NOT IN
(
SELECT LAT FROM INSURANCE
GROUP BY LAT
HAVING COUNT(LAT)>1
)
